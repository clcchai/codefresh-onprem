apiVersion: v1
kind: Secret
metadata:
  name: {{ template "onboarding-status.name" . }}
  labels:
    app: {{ template "onboarding-status.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
type: Opaque
stringData:
  newrelic-license-key: {{ .Values.newrelicLicenseKey | quote }}
  {{- if .Values.requiredInfraComponenets.mongo }}

  # mogno conncetion can be inject in one of two ways: (global)
  # gloabl.mognoURI or global.(mongodbUsername + mongodbPassword + mongoService + mongoPort + mongodbDatabase)
  # When non of global values not provider, the default connection will established
  {{- if .Values.mongoURI }}
  mongo-uri: {{ default "" .Values.mongoURI | quote }}
  {{- else if .Values.global.mongodbUsername }}
  mongo-uri: "mongodb://{{ .Values.global.mongodbUsername }}:{{ .Values.global.mongodbPassword }}@{{ .Release.Name }}-{{ .Values.global.mongoService }}:{{ .Values.global.mongoPort }}/{{ .Values.global.mongodbDatabase }}"
  {{- else }}
  mongo-uri: ""
  {{- end}}
  {{- end}}


  {{- if .Values.requiredInfraComponenets.eventBus }}
  eventbus-uri: 'amqp://{{ .Values.global.rabbitmqUsername }}:{{ .Values.global.rabbitmqPassword }}@{{ default (printf "%s-%s" .Release.Name .Values.global.rabbitService) .Values.global.rabbitmqHostname }}'
  {{- end}}


  {{- if .Values.requiredInfraComponenets.postgres }}
  postgres-host: {{ default (printf "%s-%s" .Release.Name .Values.global.postgresService) .Values.global.postgresHostname | quote }}
  postgres-database: {{ .Values.global.postgresDatabase }}
  {{- if .Values.postgresql }}
  postgres-user: {{ .Values.postgresql.postgresUser | b64enc | quote }}
  postgres-password: {{ .Values.postgresql.postgresPassword | b64enc | quote }}
  {{- else if .Values.global.postgresPassword }}
  postgres-user: {{ .Values.global.postgresUser | quote }}
  postgres-password: {{ .Values.global.postgresPassword | quote }}
  {{- end}}
  {{- end}}

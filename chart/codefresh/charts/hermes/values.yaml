backup:
  env: staging
  image: codefresh/hermes-store-backup
  replicaCount: 1
  tag: 0.1.2
cfapi:
  port: 3000
  protocol: http
global:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nodeType
            operator: NotIn
            values:
            - internal
            - worker
  codefresh: codefresh
image:
  dockerRegistry: r.cfcr.io/codefresh-inc/
  name: codefresh/hermes
  pullPolicy: Always
imageTag: 0.10.3
ingress:
  annotations: null
  enabled: false
  hosts:
  - hermes.local
logJSON: false
logLevel: debug
redis:
  enabled: false
  global:
    CertsCa:
      ca: ""
      caKey: ""
      caKeyPassword: EMPTYPASSTOREPLACE
    accountsReferralsPort: 9000
    accountsReferralsService: accounts-referrals
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: nodeType
              operator: NotIn
              values:
              - internal
              - worker
    appProtocol: http
    bitbucketClientID: invalid-id
    bitbucketClientSecret: invalid-secret
    broadcasterPort: 80
    broadcasterService: cf-broadcaster
    builderService: builder
    cfapiInternalPort: 3000
    cfapiService: cfapi
    cfcrDomain: ""
    chartsManagerPort: 9000
    chartsManagerService: charts-manager
    clusterProvidersPort: 9000
    clusterProvidersService: cluster-providers
    codefresh: codefresh
    consulHttpPort: 8500
    consulService: consul
    contextManagerPort: 9000
    contextManagerService: context-manager
    curlImage: codefresh/curl
    dindCPU: 100m
    dindCPULimits: 1000m
    dindImage: docker:18.09-dind
    dindMemory: 256Mi
    dindMemoryLimits: 4096Mi
    dindProviderPort: 9000
    dindProviderService: dind-provider
    gceProject: ""
    githubClientID: placeholder
    githubClientSecret: placeholder
    githubInternalToken: placeholder
    gitlabClientID: placeholder
    gitlabClientSecret: placeholder
    helmRepoManagerService: helm-repo-manager
    hermesService: hermes
    internalServiceTolerations:
    - effect: NoSchedule
      key: nodeType
      operator: Equal
      value: internal
    kubeIntegrationPort: 9000
    kubeIntegrationService: kube-integration
    mongoPort: 27017
    mongoService: mongodb
    mongoURI: mongodb://cfuser:mTiXcU2wafr9@mongodb:27017
    mongodbDatabase: codefresh
    mongodbImage: bitnami/mongodb:4.0.3
    mongodbPassword: mTiXcU2wafr9
    mongodbRootPassword: XT9nmM8dZD
    mongodbRootUser: root
    mongodbUsername: cfuser
    natsPort: 4222
    natsService: nats
    onboardingStatusPort: 80
    onboardingStatusService: onboarding-status
    onprem: true
    paymentsService: payments
    paymentsServicePort: 9000
    pipelineManagerPort: 9000
    pipelineManagerService: pipeline-manager
    postgresDatabase: codefresh
    postgresPassword: eC9arYka4ZbH
    postgresService: postgresql
    postgresUser: postgres
    rabbitService: rabbitmq
    redisService: redis
    registryPort: 5000
    registryService: registry
    runnerService: runner
    runtimeEnvironmentManagerPort: 80
    runtimeEnvironmentManagerService: runtime-environment-manager
    runtimeMongoURI: mongodb://cfuser:mTiXcU2wafr9@mongodb:27017/codefresh
    runtimeRedisDb: "1"
    runtimeRedisHost: cf-redis
    runtimeRedisPassword: hoC9szf7NtrU
    runtimeRedisPort: "6379"
    tlsSignPort: 4999
    tlsSignService: cfsign
  image: bitnami/redis:4.0.9-r0
  imagePullPolicy: IfNotPresent
  metrics:
    annotations:
      prometheus.io/port: "9121"
      prometheus.io/scrape: "true"
    enabled: false
    image: oliver006/redis_exporter
    imagePullPolicy: IfNotPresent
    imageTag: v0.11
    resources: {}
  nameOverride: store
  networkPolicy:
    allowExternal: true
    enabled: false
  nodeSelector: {}
  persistence:
    accessMode: ReadWriteOnce
    enabled: true
    path: /bitnami
    size: 8Gi
    subPath: ""
  podAnnotations: {}
  podLabels: {}
  port: 6379
  redisDisableCommands: FLUSHDB,FLUSHALL
  redisExtraFlags: --appendonly no
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  service:
    annotations: {}
    loadBalancerIP: null
  serviceType: ClusterIP
  tolerations: []
  usePassword: true
replicaCount: 1
service:
  externalPort: 80
  internalPort: 8080
  name: hermes
  type: ClusterIP

TestRepoUrlPrefix: cm://local.codefresh.io/api/helm/repos
chartmuseum:
  affinity: {}
  deployment:
    annotations: {}
  env:
    open:
      ALLOW_OVERWRITE: "true"
      AUTH_ANONYMOUS_GET: false
      CHART_POST_FORM_FIELD_NAME: chart
      CHART_URL: null
      CONTEXT_PATH: null
      DEBUG: "true"
      DEPTH: 2
      DISABLE_API: "false"
      DISABLE_METRICS: "false"
      INDEX_LIMIT: 2500
      LOG_JSON: true
      PROV_POST_FORM_FIELD_NAME: prov
      STORAGE: local
      STORAGE_ALIBABA_BUCKET: null
      STORAGE_ALIBABA_ENDPOINT: null
      STORAGE_ALIBABA_PREFIX: null
      STORAGE_ALIBABA_SSE: null
      STORAGE_AMAZON_BUCKET: null
      STORAGE_AMAZON_ENDPOINT: null
      STORAGE_AMAZON_PREFIX: null
      STORAGE_AMAZON_REGION: null
      STORAGE_AMAZON_SSE: null
      STORAGE_GOOGLE_BUCKET: null
      STORAGE_GOOGLE_PREFIX: null
      STORAGE_MICROSOFT_CONTAINER: null
      STORAGE_MICROSOFT_PREFIX: null
    secret:
      BASIC_AUTH_PASS: null
      BASIC_AUTH_USER: null
      GOOGLE_CREDENTIALS_JSON: null
  gcp:
    secret:
      enabled: false
      key: credentials.json
      name: null
  global:
    CertsCa:
      ca: ""
      caKey: ""
      caKeyPassword: EMPTYPASSTOREPLACE
    accountsReferralsPort: 9000
    accountsReferralsService: accounts-referrals
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: nodeType
              operator: NotIn
              values:
              - internal
              - worker
    appProtocol: http
    bitbucketClientID: invalid-id
    bitbucketClientSecret: invalid-secret
    broadcasterPort: 80
    broadcasterService: cf-broadcaster
    builderService: builder
    cfapiInternalPort: 3000
    cfapiService: cfapi
    cfcrDomain: ""
    chartsManagerPort: 9000
    chartsManagerService: charts-manager
    clusterProvidersPort: 9000
    clusterProvidersService: cluster-providers
    codefresh: codefresh
    consulHttpPort: 8500
    consulService: consul
    contextManagerPort: 9000
    contextManagerService: context-manager
    curlImage: codefresh/curl
    dindCPU: 100m
    dindCPULimits: 1000m
    dindImage: docker:18.09-dind
    dindMemory: 256Mi
    dindMemoryLimits: 4096Mi
    dindProviderPort: 9000
    dindProviderService: dind-provider
    gceProject: ""
    githubClientID: placeholder
    githubClientSecret: placeholder
    githubInternalToken: placeholder
    gitlabClientID: placeholder
    gitlabClientSecret: placeholder
    helmRepoManagerService: helm-repo-manager
    hermesService: hermes
    internalServiceTolerations:
    - effect: NoSchedule
      key: nodeType
      operator: Equal
      value: internal
    kubeIntegrationPort: 9000
    kubeIntegrationService: kube-integration
    mongoPort: 27017
    mongoService: mongodb
    mongoURI: mongodb://cfuser:mTiXcU2wafr9@mongodb:27017
    mongodbDatabase: codefresh
    mongodbImage: bitnami/mongodb:4.0.3
    mongodbPassword: mTiXcU2wafr9
    mongodbRootPassword: XT9nmM8dZD
    mongodbRootUser: root
    mongodbUsername: cfuser
    natsPort: 4222
    natsService: nats
    onboardingStatusPort: 80
    onboardingStatusService: onboarding-status
    onprem: true
    paymentsService: payments
    paymentsServicePort: 9000
    pipelineManagerPort: 9000
    pipelineManagerService: pipeline-manager
    postgresDatabase: codefresh
    postgresPassword: eC9arYka4ZbH
    postgresService: postgresql
    postgresUser: postgres
    rabbitService: rabbitmq
    redisService: redis
    registryPort: 5000
    registryService: registry
    runnerService: runner
    runtimeEnvironmentManagerPort: 80
    runtimeEnvironmentManagerService: runtime-environment-manager
    runtimeMongoURI: mongodb://cfuser:mTiXcU2wafr9@mongodb:27017/codefresh
    runtimeRedisDb: "1"
    runtimeRedisHost: cf-redis
    runtimeRedisPassword: hoC9szf7NtrU
    runtimeRedisPort: "6379"
    tlsSignPort: 4999
    tlsSignService: cfsign
  image:
    pullPolicy: IfNotPresent
    repository: chartmuseum/chartmuseum
    tag: v0.5.2
  ingress:
    annotations: null
    enabled: false
    hosts:
    - chartmuseum.local
  nodeSelector: {}
  persistence:
    accessMode: ReadWriteOnce
    enabled: false
    size: 8Gi
  probes:
    liveness:
      failureThreshold: 3
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    readiness:
      failureThreshold: 3
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
  publicHelmRepo: true
  replica:
    annotations: {}
  replicaCount: 1
  resources: {}
  service:
    annotations: {}
    externalPort: 8080
    nodePort: null
    type: ClusterIP
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  tolerations: []
global:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nodeType
            operator: NotIn
            values:
            - internal
            - worker
image:
  dockerRegistry: r.cfcr.io/codefresh-inc/
  name: codefresh/helm-repo-manager
  pullPolicy: Always
imageTag: 0.3.3
ingress:
  annotations: null
  enabled: false
  hosts:
  - helm-repo-manager.local
logJSON: false
logLevel: debug
postgres:
  disableSSL: true
  port: 5432
replicaCount: 1
service:
  externalPort: 80
  internalPort: 8080
  name: helm-repo-manager
  type: ClusterIP
